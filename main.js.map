{"version":3,"file":"main.js","mappings":"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","sources":["webpack://battleship/./src/logic.js","webpack://battleship/./src/visual.js","webpack://battleship/./src/index.js"],"sourcesContent":["let field = [\n  [\"a1\", \"a2\", \"a3\", \"a4\", \"a5\", \"a6\", \"a7\", \"a8\", \"a9\", \"a10\"],\n  [\"b1\", \"b2\", \"b3\", \"b4\", \"b5\", \"b6\", \"b7\", \"b8\", \"b9\", \"b10\"],\n  [\"c1\", \"c2\", \"c3\", \"c4\", \"c5\", \"c6\", \"c7\", \"c8\", \"c9\", \"c10\"],\n  [\"d1\", \"d2\", \"d3\", \"d4\", \"d5\", \"d6\", \"d7\", \"d8\", \"d9\", \"d10\"],\n  [\"e1\", \"e2\", \"e3\", \"e4\", \"e5\", \"e6\", \"e7\", \"e8\", \"e9\", \"e10\"],\n  [\"f1\", \"f2\", \"f3\", \"f4\", \"f5\", \"f6\", \"f7\", \"f8\", \"f9\", \"f10\"],\n  [\"g1\", \"g2\", \"g3\", \"g4\", \"g5\", \"g6\", \"g7\", \"g8\", \"g9\", \"g10\"],\n  [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"h7\", \"h8\", \"h9\", \"h10\"],\n  [\"i1\", \"i2\", \"i3\", \"i4\", \"i5\", \"i6\", \"i7\", \"i8\", \"i9\", \"i10\"],\n  [\"j1\", \"j2\", \"j3\", \"j4\", \"j5\", \"j6\", \"j7\", \"j8\", \"j9\", \"j10\"],\n];\nclass ships {\n  constructor(name, start, length, orientation) {\n    this.name = name;\n    this.start = start;\n    this.length = length;\n    this.hp = length;\n    this.orientation = orientation;\n  }\n\n  hit() {\n    let hp = this.hp;\n    if (hp === 0) {\n      this.sink();\n    } else {\n      hp--;\n    }\n    return hp;\n  }\n\n  sunk() {\n    return \"ship has sunk\"; /// figure this out later\n  }\n}\n\nclass gameboard {\n  constructor() {\n    this.board = [\n      [\"a1\", \"a2\", \"a3\", \"a4\", \"a5\", \"a6\", \"a7\", \"a8\", \"a9\", \"a10\"],\n      [\"b1\", \"b2\", \"b3\", \"b4\", \"b5\", \"b6\", \"b7\", \"b8\", \"b9\", \"b10\"],\n      [\"c1\", \"c2\", \"c3\", \"c4\", \"c5\", \"c6\", \"c7\", \"c8\", \"c9\", \"c10\"],\n      [\"d1\", \"d2\", \"d3\", \"d4\", \"d5\", \"d6\", \"d7\", \"d8\", \"d9\", \"d10\"],\n      [\"e1\", \"e2\", \"e3\", \"e4\", \"e5\", \"e6\", \"e7\", \"e8\", \"e9\", \"e10\"],\n      [\"f1\", \"f2\", \"f3\", \"f4\", \"f5\", \"f6\", \"f7\", \"f8\", \"f9\", \"f10\"],\n      [\"g1\", \"g2\", \"g3\", \"g4\", \"g5\", \"g6\", \"g7\", \"g8\", \"g9\", \"g10\"],\n      [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"h7\", \"h8\", \"h9\", \"h10\"],\n      [\"i1\", \"i2\", \"i3\", \"i4\", \"i5\", \"i6\", \"i7\", \"i8\", \"i9\", \"i10\"],\n      [\"j1\", \"j2\", \"j3\", \"j4\", \"j5\", \"j6\", \"j7\", \"j8\", \"j9\", \"j10\"],\n    ];\n  }\n\n  gameboardPosition(ship, gameboard) {\n    let board = gameboard.board;\n    let variable = ship;\n\n    let length = variable.length;\n    let orientation = variable.orientation;\n    let start = variable.start;\n    let name = variable.name;\n\n    let split = start.split(\"\");\n\n    let row = split[0];\n    let column = +split[1];\n\n    let finalRow = row.toUpperCase();\n    let ans = finalRow.charCodeAt() - 65;\n\n    if (orientation === \"vertical\") {\n      let answer = Number(ans);\n\n      for (let i = 0; i < 1; i++) {\n        /// vertical\n        if (typeof board[answer + i][column] === \"string\") {\n          ////\n\n          let counter = ans;\n          for (let k = 0; k < length; k++) {\n            if (counter === 10) {\n              return;\n            } else {\n              counter++;\n            }\n          }\n          for (let m = 0; m < length; m++) {\n            let j = ans;\n            let col = Number(column);\n\n            try {\n              board[j][col - 1] = variable;\n            } catch (e) {\n              console.log(\"j was bad\");\n              console.log(\"J catch:\", j);\n              console.log(board);\n              console.log(board[j]);\n            }\n            board[j][col - 1] = variable;\n            ans++;\n          }\n        }\n      }\n      /// places vertically\n\n      // for every loop\n      // it assigns ans + 1 (ans being the final row)\n      // and then increments the answer to keep increasing the column\n      // until the for loop stops because it keeps track of i now\n    } else if (variable.orientation === \"horizontal\") {\n      for (let i = 0; i < length; i++) {\n        /// horizontal checking\n        if (\n          typeof board[+ans][column + i] === \"string\" &&\n          typeof board[ans][column - 2] === \"string\" &&\n          typeof board[ans - 1][column - 1] === \"string\" //&&\n          // typeof board[ans + 1][column - 1] === \"string\"\n        ) {\n          let counter = column;\n          for (let i = 0; i < length; i++) {\n            /// places it horizontally\n            if (counter === 11) {\n              return;\n            } else {\n              counter++;\n            }\n          }\n          for (let m = 0; m < length; m++) {\n            let j = ans;\n            board[j][column - 1] = variable;\n            column++;\n          }\n        }\n      }\n    } else {\n      return \"Error orientation is incorrect\";\n    }\n    console.table(board);\n\n    return board;\n  }\n\n  recieveAttack(field, board) {\n    let gameboard = board.board;\n    let attack = field;\n\n    let split = attack.split(\"\");\n\n    let row = split[0];\n    let column = split[1];\n\n    let finalRow = row.toUpperCase();\n    let ans = finalRow.charCodeAt() - 65;\n\n    let coord = gameboard[ans][column - 1];\n\n    if (typeof coord !== \"string\") {\n      coord.hit(); /// coord references object and calls hit for hp which deducts hp by 1\n      gameboard[ans][column - 1] = \"o\";\n    } else if (coord === \"x\") {\n      return \"INVALID CHOICE\"; /// return invalid choice as this has already been marked before\n    } else {\n      gameboard[ans][column - 1] = \"x\";\n\n      /// considered this hit as its a valid box and change it to x\n    }\n    return gameboard;\n  }\n\n  allSunk(board) {\n    let gameboard = board.board;\n    let arr = [];\n\n    gameboard.forEach((i) => {\n      i.forEach((j) => {\n        arr.push(j);\n      });\n    });\n    let condition = arr.every((x) => typeof x === \"string\");\n\n    if (condition === true) {\n      return \"THE WINNER\"; /// figure this out later\n    } else {\n      return \"play on\";\n    }\n  }\n  computerGenerate() {\n    let row = Math.floor(Math.random() * (10 - 3) + 3);\n    let column = Math.floor(Math.random() * (10 - 3) + 3);\n    let choice = [\"horizontal\", \"vertical\"];\n    let min = Math.ceil(0);\n    let max = Math.max(2);\n    let choiceNum = Math.floor(Math.random() * (max - min) + min);\n    let orientation = choice[choiceNum];\n\n    return { row, column, orientation };\n  }\n}\n\nclass player {\n  constructor(name, attack) {\n    this.name = name;\n    this.arr = [];\n    this.attack = attack;\n  }\n\n  computerPlay() {\n    let arr = this.arr;\n    let row = Math.floor(Math.random() * (10 - 2) + 0);\n    let column = Math.floor(Math.random() * (10 - 2) + 0);\n\n    let move = field[row][column];\n    console.log(\"Computer move:\", move);\n    console.log(\"Computer Array\", arr);\n\n    if (arr.indexOf(move) !== -1) {\n      this.computerPlay();\n    } else {\n      arr.push(move);\n      return move;\n    }\n  }\n}\n\nexport { field, ships, gameboard, player };\n","import { player } from \"./logic\";\n\nlet playerBoard = document.querySelector(\".playerArray\");\nlet computerBoard = document.querySelector(\".computerArray\");\nlet turn = document.querySelector(\".turn\");\n\nfunction displayBoard(player, computer) {\n  let m = 0;\n  let field = [\n    [\"a1\", \"a2\", \"a3\", \"a4\", \"a5\", \"a6\", \"a7\", \"a8\", \"a9\", \"a10\"],\n    [\"b1\", \"b2\", \"b3\", \"b4\", \"b5\", \"b6\", \"b7\", \"b8\", \"b9\", \"b10\"],\n    [\"c1\", \"c2\", \"c3\", \"c4\", \"c5\", \"c6\", \"c7\", \"c8\", \"c9\", \"c10\"],\n    [\"d1\", \"d2\", \"d3\", \"d4\", \"d5\", \"d6\", \"d7\", \"d8\", \"d9\", \"d10\"],\n    [\"e1\", \"e2\", \"e3\", \"e4\", \"e5\", \"e6\", \"e7\", \"e8\", \"e9\", \"e10\"],\n    [\"f1\", \"f2\", \"f3\", \"f4\", \"f5\", \"f6\", \"f7\", \"f8\", \"f9\", \"f10\"],\n    [\"g1\", \"g2\", \"g3\", \"g4\", \"g5\", \"g6\", \"g7\", \"g8\", \"g9\", \"g10\"],\n    [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"h7\", \"h8\", \"h9\", \"h10\"],\n    [\"i1\", \"i2\", \"i3\", \"i4\", \"i5\", \"i6\", \"i7\", \"i8\", \"i9\", \"i10\"],\n    [\"j1\", \"j2\", \"j3\", \"j4\", \"j5\", \"j6\", \"j7\", \"j8\", \"j9\", \"j10\"],\n  ];\n\n  let arr = [];\n  field.forEach((element) => {\n    element.forEach((i) => {\n      arr.push(i);\n    });\n  });\n\n  playerBoard.textContent = \"\";\n  computerBoard.textContent = \"\";\n\n  player.forEach((element) => {\n    element.forEach((i) => {\n      if (typeof i !== \"string\") {\n        let name = i.name;\n        let div = document.createElement(\"div\");\n        div.textContent = name;\n        playerBoard.append(div);\n        div.style.backgroundColor = \"#7391C8\";\n        div.style.color = \"#7391C8\";\n        div.dataset.cell = arr[m];\n        m++;\n      } else {\n        if (i === \"o\") {\n          let div = document.createElement(\"div\");\n          div.textContent = i;\n          div.style.backgroundColor = \" #A2C4E0\";\n          div.style.color = \"#A2C4E0\";\n          playerBoard.append(div);\n          div.dataset.cell = arr[m];\n          m++;\n        } else if (i === \"x\") {\n          let div = document.createElement(\"div\");\n          div.textContent = i;\n          div.style.backgroundColor = \"#BDC6D9\";\n          div.style.color = \"#BDC6D9\";\n          playerBoard.append(div);\n          div.dataset.cell = arr[m];\n          m++;\n        } else {\n          let div = document.createElement(\"div\");\n          div.textContent = i;\n          div.style.backgroundColor = \" #52688f\";\n          div.style.color = \"#52688f\";\n          playerBoard.append(div);\n          div.dataset.cell = arr[m];\n          m++;\n        }\n      }\n    });\n  });\n\n  m = 0;\n  computer.forEach((element) => {\n    for (let k = 0; k < element.length; k++) {\n      if (element[k] === \"o\") {\n        let div = document.createElement(\"div\");\n        div.textContent = element[k];\n        computerBoard.append(div);\n        div.style.backgroundColor = \" #A2C4E0\";\n        div.style.color = \"#A2C4E0\";\n        div.dataset.cell = arr[m];\n        m++;\n      } else if (element[k] === \"x\") {\n        let div = document.createElement(\"div\");\n        div.textContent = element[k];\n        div.style.backgroundColor = \"#BDC6D9\";\n        div.style.color = \"#BDC6D9\";\n        computerBoard.append(div);\n        div.dataset.cell = arr[m];\n        m++;\n      } else {\n        let div = document.createElement(\"div\");\n        div.textContent = element[k];\n        computerBoard.append(div);\n        div.style.backgroundColor = \" #52688f\";\n        div.style.color = \"#52688f\";\n        div.dataset.cell = arr[m];\n        m++;\n      }\n    }\n  });\n}\n\nfunction hover(gameboard, counter) {\n  let arr = [];\n  let length = counter;\n  if (length < 2) {\n    return;\n  }\n  console.log(\"Length:\", length);\n\n  let board = gameboard.board;\n  playerBoard.addEventListener(\"mouseover\", (e) => {\n    arr.forEach((element) => {\n      element.style.backgroundColor = \" #52688f\";\n      element.style.color = \" #52688f\";\n    });\n\n    let orientation = document.querySelector(\".btn\").textContent;\n    let start = e.target.dataset.cell;\n\n    let split = start.split(\"\");\n\n    let row = split[0];\n    let column = Number(split[1]);\n\n    let finalRow = row.toUpperCase();\n    let ans = finalRow.charCodeAt() - 65;\n\n    if (orientation === \"vertical\") {\n      for (let m = 0; m < length; m++) {\n        let j = ans;\n        let col = Number(column);\n\n        Array.from(playerBoard.children).forEach((i) => {\n          if (i.dataset.cell === board[j][col - 1]) {\n            i.style.backgroundColor = \"#F7CB2D\";\n            i.style.color = \"#F7CB2D\";\n\n            arr.push(i);\n          }\n        });\n\n        ans++;\n      }\n    }\n\n    if (orientation === \"horizontal\") {\n      for (let m = 0; m < length; m++) {\n        let j = ans;\n\n        Array.from(playerBoard.children).forEach((i) => {\n          if (i.dataset.cell === board[j][column - 1]) {\n            i.style.backgroundColor = \"#F7CB2D\";\n            i.style.color = \"#F7CB2D\";\n\n            arr.push(i);\n          }\n        });\n        column++;\n      }\n    }\n    // let cellTarget = e.target;\n    // let cell = cellTarget.dataset.cell;\n    // console.log(cell);\n  });\n}\n\nexport { displayBoard, hover };\n","import * as logic from \"./logic.js\";\nimport * as visual from \"./visual.js\";\n\nlet playerChoice = document.querySelector(\".playerArray\");\nlet computerBoard = document.querySelector(\".computerArray\");\nlet winner = document.querySelector(\".winner-text\");\nlet btn = document.querySelector(\".btn\");\nlet turn = document.querySelector(\".turn\");\n\nlet playerGameboard = new logic.gameboard();\nlet computerGameboard = new logic.gameboard();\nlet player = new logic.player(\"player\");\nlet computer = new logic.player(\"computer\");\nvisual.displayBoard(playerGameboard.board, computerGameboard.board);\nvisual.hover(playerGameboard, 5);\n\nbtn.addEventListener(\"click\", (e) => {\n  if (e.target.textContent === \"vertical\") {\n    btn.textContent = \"horizontal\";\n  } else {\n    btn.textContent = \"vertical\";\n  }\n});\n\nplayerChoice.addEventListener(\"click\", (e) => {\n  let orientation = btn.textContent;\n  console.log(orientation);\n\n  let cell = e.target.textContent;\n  let arr = [];\n  console.log(\"Cell:\", cell);\n  placeShip(cell, orientation);\n});\n\nlet counter = 5;\n\nplayerChoice.addEventListener(\"click\", () => {\n  counter--;\n\n  visual.hover(playerGameboard, counter);\n  console.log(counter);\n});\n/// gameflow begins here\n\ncomputerBoard.addEventListener(\"click\", (e) => {\n  if (\n    turn.textContent !== \"Player Turn\" ||\n    turn.textContent === \"Place your ships\"\n  ) {\n    return;\n  } else {\n    let cell = e.target.dataset.cell;\n    console.log(\"Attack cell:\", cell);\n\n    computerGameboard.recieveAttack(cell, computerGameboard);\n\n    console.log(\"Computer Gameboard\", computerGameboard);\n\n    if (computerGameboard.allSunk(computerGameboard) === \"THE WINNER\") {\n      turn.textContent = \"Player has won!\";\n      visual.displayBoard(playerGameboard.board, computerGameboard.board);\n\n      return;\n    } else {\n      turn.textContent = \"Computer Turn\";\n      visual.displayBoard(playerGameboard.board, computerGameboard.board);\n      console.log(\"Player turn finished\");\n      computerMove();\n    }\n  }\n});\n\nfunction computerMove() {\n  if (turn.textContent === \"Player Turn\") {\n    return;\n  } else {\n    let computerAttack = computer.computerPlay();\n    console.log(computerAttack);\n    if (computerAttack === undefined) {\n      let computerAttack = computer.computerPlay();\n      return computerAttack;\n    }\n    playerGameboard.recieveAttack(computerAttack, playerGameboard);\n    visual.displayBoard(playerGameboard.board, computerGameboard.board);\n    if (playerGameboard.allSunk(playerGameboard) === \"THE WINNER\") {\n      turn.textContent = \"Computer has won!\";\n      return;\n    } else {\n      turn.textContent = \"Player Turn\";\n      console.log(\"Computer turn finished\");\n    }\n  }\n}\n\nfunction placeShip(cell, orientation) {\n  let temp = playerGameboard.board;\n\n  if (temp.some((row) => row.some((x) => x.name === \"ds\"))) {\n    /// return if all ships are placed and baord is clicked aka do nothing\n    return;\n  }\n\n  if (temp.some((row) => row.some((x) => x.name === \"cr\"))) {\n    let ship4 = new logic.ships(\"ds\", cell, 2, orientation);\n    let playerBoard = playerGameboard.gameboardPosition(ship4, playerGameboard);\n    if (playerBoard === undefined) {\n      console.log(playerBoard);\n      console.log(\"Pick another position!\");\n    } else {\n      visual.displayBoard(playerBoard, computerGameboard.board);\n    }\n    computerPlace(); /// once all the ships is placed, generate the ships\n    turn.textContent = \"Player Turn\";\n    playerChoice.removeEventListener(\"click\", () => {\n      counter--;\n\n      visual.hover(playerGameboard, counter);\n      console.log(counter);\n    });\n    return;\n  }\n\n  if (temp.some((row) => row.some((x) => x.name === \"su\"))) {\n    let ship4 = new logic.ships(\"cr\", cell, 3, orientation);\n    let playerBoard = playerGameboard.gameboardPosition(ship4, playerGameboard);\n    if (playerBoard === undefined) {\n      console.log(playerBoard);\n      console.log(\"Pick another position!\");\n    } else {\n      visual.displayBoard(playerBoard, computerGameboard.board);\n    }\n    return;\n  }\n\n  if (temp.some((row) => row.some((x) => x.name === \"bs\"))) {\n    let ship3 = new logic.ships(\"su\", cell, 3, orientation);\n    let playerBoard = playerGameboard.gameboardPosition(ship3, playerGameboard);\n    if (playerBoard === undefined) {\n      console.log(playerBoard);\n      console.log(\"Pick another position\");\n    } else {\n      visual.displayBoard(playerBoard, computerGameboard.board);\n    }\n    return;\n  }\n\n  if (temp.some((row) => row.some((x) => x.name === \"ca\"))) {\n    let ship1 = new logic.ships(\"bs\", cell, 4, orientation);\n    let playerBoard = playerGameboard.gameboardPosition(ship1, playerGameboard);\n    if (playerBoard === undefined) {\n      console.log(playerBoard);\n      console.log(\"Pick another position!\");\n    } else {\n      visual.displayBoard(playerBoard, computerGameboard.board);\n    }\n    return;\n  }\n\n  if (temp.every((row) => row.every((x) => typeof x === \"string\"))) {\n    let ship2 = new logic.ships(\"ca\", cell, 5, orientation);\n    let playerBoard = playerGameboard.gameboardPosition(ship2, playerGameboard);\n    if (playerBoard === undefined) {\n      console.log(playerBoard);\n      console.log(\"Pick another position!\");\n    } else {\n      visual.displayBoard(playerBoard, computerGameboard.board);\n    }\n\n    return;\n  }\n\n  console.log(playerGameboard.board);\n}\n\nfunction computerPlace() {\n  /// 3 needs to repeat twice\n  let name;\n  let length;\n  for (let i = 2; i < 6; i++) {\n    if (i === 2) {\n      name = \"ds\";\n      length = 2;\n    }\n\n    if (i === 3) {\n      name = \"su\";\n      length = 3;\n      for (let k = 0; k <= 2; k++) {\n        let computerShip = new logic.ships(\n          name,\n          logic.field[computerGameboard.computerGenerate().row][\n            computerGameboard.computerGenerate().column\n          ],\n          3,\n          computerGameboard.computerGenerate().orientation\n        );\n        console.log(computerShip);\n\n        let computerPlace = computerGameboard.gameboardPosition(\n          computerShip,\n          computerGameboard\n        );\n\n        visual.displayBoard(playerGameboard.board, computerGameboard.board);\n        name = \"cr\";\n      }\n    }\n\n    if (i === 4) {\n      name = \"bs\";\n      length = 4;\n    }\n\n    if (i === 5) {\n      name = \"ca\";\n      length = 5;\n    }\n\n    let computerShip = new logic.ships(\n      name,\n      logic.field[computerGameboard.computerGenerate().row][\n        computerGameboard.computerGenerate().column\n      ],\n      length,\n      computerGameboard.computerGenerate().orientation\n    );\n    console.log(computerShip);\n\n    let computerPlace = computerGameboard.gameboardPosition(\n      computerShip,\n      computerGameboard\n    );\n\n    visual.displayBoard(playerGameboard.board, computerGameboard.board);\n  }\n}\n\n// let player = new logic.player(\"Player1\", logic.field[2][6]);\n// let computer = new logic.player(\"computer\");\n\n/// loops through the array and visually displays it\n\n/// generate user\n/// generate computer\n/// generate user board\n/// generate computer board\n/// place user ships\n/// generate computer ships\n\n// let ship = new logic.ships(\"ship\", logic.field[7][1], 3, \"horizontal\");\n// let variable = ship;\n\n// let gameboard = new logic.gameboard();\n// gameboard.gameboardPosition(ship, gameboard);\n\n// let ship2 = new logic.ships(\"ship2\", logic.field[6][6], 3, \"horizontal\");\n// let gameboard2 = new logic.gameboard();\n\n// let variable2 = ship;\n\n// gameboard.gameboardPosition(ship2, gameboard2);\n// // gameboard.recieveAttack(logic.field[0][1], gameboard); /// a\n// // gameboard.recieveAttack(logic.field[1][1], gameboard); /// b\n// // gameboard.recieveAttack(logic.field[2][1], gameboard); /// c\n// // gameboard.recieveAttack(logic.field[3][1], gameboard); /// d\n// // gameboard.recieveAttack(logic.field[4][1], gameboard); /// e\n// // gameboard.recieveAttack(logic.field[5][1], gameboard); /// f\n\n// // gameboard.recieveAttack(logic.field[7][1], gameboard); /// f\n\n// // gameboard.allSunk(gameboard);\n// let computer = new logic.player(\"computer\");\n// let player = new logic.player(\"player\", logic.field[2][3]);\n\n// console.log(computer);\n\n// let attack = computer.computerPlay();\n// let playerAttack = player.attack;\n// console.log(\"Player\", playerAttack);\n// console.log(\"Computer Move\", attack);\n"],"names":["field","ships","constructor","name","start","length","orientation","this","hp","hit","sink","sunk","gameboard","board","gameboardPosition","ship","variable","split","row","column","ans","toUpperCase","charCodeAt","answer","Number","i","counter","k","m","j","col","e","console","log","table","recieveAttack","coord","allSunk","arr","forEach","push","every","x","computerGenerate","Math","floor","random","min","ceil","max","player","attack","computerPlay","move","indexOf","playerBoard","document","querySelector","computerBoard","displayBoard","computer","element","textContent","div","createElement","append","style","backgroundColor","color","dataset","cell","hover","addEventListener","target","Array","from","children","playerChoice","btn","playerGameboard","computerGameboard","temp","some","ship4","undefined","computerShip","computerPlace","removeEventListener","ship3","ship1","ship2","placeShip","computerAttack","computerMove"],"sourceRoot":""}