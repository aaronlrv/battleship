{"version":3,"file":"main.js","mappings":"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","sources":["webpack://battleship/./src/logic.js","webpack://battleship/./src/index.js"],"sourcesContent":["let field = [\n  [\"a1\", \"a2\", \"a3\", \"a4\", \"a5\", \"a6\", \"a7\", \"a8\", \"a9\", \"a10\"],\n  [\"b1\", \"b2\", \"b3\", \"b4\", \"b5\", \"b6\", \"b7\", \"b8\", \"b9\", \"b10\"],\n  [\"c1\", \"c2\", \"c3\", \"c4\", \"c5\", \"c6\", \"c7\", \"c8\", \"c9\", \"c10\"],\n  [\"d1\", \"d2\", \"d3\", \"d4\", \"d5\", \"d6\", \"d7\", \"d8\", \"d9\", \"d10\"],\n  [\"e1\", \"e2\", \"e3\", \"e4\", \"e5\", \"e6\", \"e7\", \"e8\", \"e9\", \"e10\"],\n  [\"f1\", \"f2\", \"f3\", \"f4\", \"f5\", \"f6\", \"f7\", \"f8\", \"f9\", \"f10\"],\n  [\"g1\", \"g2\", \"g3\", \"g4\", \"g5\", \"g6\", \"g7\", \"g8\", \"g9\", \"g10\"],\n  [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"h7\", \"h8\", \"h9\", \"h10\"],\n  [\"i1\", \"i2\", \"i3\", \"i4\", \"i5\", \"i6\", \"i7\", \"i8\", \"i9\", \"i10\"],\n  [\"j1\", \"j2\", \"j3\", \"j4\", \"j5\", \"j6\", \"j7\", \"j8\", \"j9\", \"j10\"],\n];\nclass ships {\n  constructor(name, start, length, orientation) {\n    this.name = name;\n    this.start = start;\n    this.length = length;\n    this.hp = length;\n    this.orientation = orientation;\n  }\n\n  hit() {\n    let hp = this.hp;\n    if (hp === 0) {\n      this.sink();\n    } else {\n      hp--;\n    }\n    console.log(hp);\n    return hp;\n  }\n\n  sunk() {\n    return \"ship has sunk\"; /// figure this out later\n  }\n}\n\nclass gameboard {\n  constructor() {\n    this.board = [\n      [\"a1\", \"a2\", \"a3\", \"a4\", \"a5\", \"a6\", \"a7\", \"a8\", \"a9\", \"a10\"],\n      [\"b1\", \"b2\", \"b3\", \"b4\", \"b5\", \"b6\", \"b7\", \"b8\", \"b9\", \"b10\"],\n      [\"c1\", \"c2\", \"c3\", \"c4\", \"c5\", \"c6\", \"c7\", \"c8\", \"c9\", \"c10\"],\n      [\"d1\", \"d2\", \"d3\", \"d4\", \"d5\", \"d6\", \"d7\", \"d8\", \"d9\", \"d10\"],\n      [\"e1\", \"e2\", \"e3\", \"e4\", \"e5\", \"e6\", \"e7\", \"e8\", \"e9\", \"e10\"],\n      [\"f1\", \"f2\", \"f3\", \"f4\", \"f5\", \"f6\", \"f7\", \"f8\", \"f9\", \"f10\"],\n      [\"g1\", \"g2\", \"g3\", \"g4\", \"g5\", \"g6\", \"g7\", \"g8\", \"g9\", \"g10\"],\n      [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"h7\", \"h8\", \"h9\", \"h10\"],\n      [\"i1\", \"i2\", \"i3\", \"i4\", \"i5\", \"i6\", \"i7\", \"i8\", \"i9\", \"i10\"],\n      [\"j1\", \"j2\", \"j3\", \"j4\", \"j5\", \"j6\", \"j7\", \"j8\", \"j9\", \"j10\"],\n    ];\n  }\n\n  gameboardPosition(ship, gameboard) {\n    console.log(gameboard);\n    let board = gameboard.board;\n    let variable = ship;\n\n    let length = variable.length;\n    let orientation = variable.orientation;\n    let start = variable.start;\n    let name = variable.name;\n\n    let split = start.split(\"\");\n\n    let row = split[0];\n    let column = split[1];\n\n    let finalRow = row.toUpperCase();\n    let ans = finalRow.charCodeAt() - 65;\n    if (orientation === \"vertical\") {\n      /// places vertically\n      for (let i = 0; i < length; i++) {\n        let j = ans;\n        board[j][column - 1] = variable;\n        ans++;\n      }\n      // for every loop\n      // it assigns ans + 1 (ans being the final row)\n      // and then increments the answer to keep increasing the column\n      // until the for loop stops because it keeps track of i now\n    } else if (variable.orientation === \"horizontal\") {\n      for (let i = 0; i < length; i++) {\n        /// places it horizontally\n        let j = ans;\n        board[column - 1][j] = variable;\n        ans++;\n      }\n    } else {\n      return \"Error orientation is incorrect\";\n    }\n    console.table(board);\n    return board;\n  }\n\n  recieveAttack(field, board) {\n    let gameboard = board.board;\n    let attack = field;\n    console.table(gameboard);\n    console.log(\"Attack:\", attack);\n    let split = attack.split(\"\");\n\n    let row = split[0];\n    let column = split[1];\n\n    console.log(\"Row:\", row);\n    console.log(\"Column:\", column);\n\n    let finalRow = row.toUpperCase();\n    console.log(finalRow);\n    let ans = finalRow.charCodeAt() - 65;\n    console.log(\"Answer:\", ans);\n    let coord = gameboard[ans][column - 1];\n\n    console.log(\"Final COords:\", coord);\n    if (typeof coord !== \"string\") {\n      console.log(\"hit\");\n      coord.hit(); /// coord references object and calls hit for hp which deducts hp by 1\n      gameboard[ans][column - 1] = \"o\";\n      console.log(gameboard);\n    } else if (coord === \"x\") {\n      console.log(\"INVALID CHOICE\");\n      return \"INVALID CHOICE\"; /// return invalid choice as this has already been marked before\n    } else {\n      console.log(\"hit blank box\");\n      gameboard[ans][column - 1] = \"x\";\n      console.table(gameboard);\n      /// considered this hit as its a valid box and change it to x\n    }\n\n    return gameboard;\n  }\n\n  allSunk(board) {\n    let gameboard = board.board;\n  }\n}\n\nexport { field, ships, gameboard };\n","import * as logic from \"./logic.js\";\n\nlet ship = new logic.ships(\"ship\", logic.field[7][1], 3, \"vertical\");\nlet variable = ship;\n\nlet gameboard = new logic.gameboard();\ngameboard.gameboardPosition(ship, gameboard);\n\nlet ship2 = new logic.ships(\"ship2\", logic.field[6][6], 3, \"horizontal\");\nlet gameboard2 = new logic.gameboard();\n\nlet variable2 = ship;\n\ngameboard.gameboardPosition(ship2, gameboard2);\ngameboard.recieveAttack(logic.field[0][1], gameboard); /// a\ngameboard.recieveAttack(logic.field[1][1], gameboard); /// b\ngameboard.recieveAttack(logic.field[2][1], gameboard); /// c\ngameboard.recieveAttack(logic.field[3][1], gameboard); /// d\ngameboard.recieveAttack(logic.field[4][1], gameboard); /// e\ngameboard.recieveAttack(logic.field[5][1], gameboard); /// f\n\ngameboard.recieveAttack(logic.field[7][1], gameboard); /// f\n"],"names":["field","ships","constructor","name","start","length","orientation","this","hp","hit","sink","console","log","sunk","gameboard","board","gameboardPosition","ship","variable","split","row","column","ans","toUpperCase","charCodeAt","i","j","table","recieveAttack","attack","finalRow","coord","allSunk","ship2","gameboard2"],"sourceRoot":""}